# Makefile.in generated by automake 1.7.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@

#SUBDIRS = entities
LDADD = -lclanSound -lclanDisplay -lclanApp -lclanCore

bin_PROGRAMS = epiphany

epiphany_SOURCES = sfx.cpp main.cpp level.cpp sample.cpp entity.cpp \
	levelmap.cpp epiconfig.cpp\
	spriteset.cpp game_timer.cpp myparser.cpp epimap.cpp emdlparser.cpp \
	entities/entity_gem.cpp entities/entity_door.cpp  entities/entity_wood.cpp 			\
         entities/entity_brick.cpp  entities/entity_player.cpp  entities/entity_falling.cpp 		\
	 entities/entity_emerald.cpp  entities/entity_peperon.cpp  entities/entity_sapphire.cpp 	\
	 entities/entity_flintstone.cpp  entities/entity_explosion.cpp  entities/entity_monster.cpp 	\
	 entities/entity_boulder.cpp  entities/entity_tomato.cpp				\
         entities/entity_steel.cpp  entities/entity_grass.cpp  entities/entity_exit.cpp  entities/entity_key.cpp \
	pointer.cpp screen.cpp sprite.cpp menu.cpp game.cpp


EXTRA_DISTS = entities/Makefile.am
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = epiphany$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_epiphany_OBJECTS = sfx.$(OBJEXT) main.$(OBJEXT) level.$(OBJEXT) \
	sample.$(OBJEXT) entity.$(OBJEXT) levelmap.$(OBJEXT) \
	epiconfig.$(OBJEXT) spriteset.$(OBJEXT) game_timer.$(OBJEXT) \
	myparser.$(OBJEXT) epimap.$(OBJEXT) emdlparser.$(OBJEXT) \
	entity_gem.$(OBJEXT) entity_door.$(OBJEXT) \
	entity_wood.$(OBJEXT) entity_brick.$(OBJEXT) \
	entity_player.$(OBJEXT) entity_falling.$(OBJEXT) \
	entity_emerald.$(OBJEXT) entity_peperon.$(OBJEXT) \
	entity_sapphire.$(OBJEXT) entity_flintstone.$(OBJEXT) \
	entity_explosion.$(OBJEXT) entity_monster.$(OBJEXT) \
	entity_boulder.$(OBJEXT) entity_tomato.$(OBJEXT) \
	entity_steel.$(OBJEXT) entity_grass.$(OBJEXT) \
	entity_exit.$(OBJEXT) entity_key.$(OBJEXT) pointer.$(OBJEXT) \
	screen.$(OBJEXT) sprite.$(OBJEXT) menu.$(OBJEXT) game.$(OBJEXT)
epiphany_OBJECTS = $(am_epiphany_OBJECTS)
epiphany_LDADD = $(LDADD)
epiphany_DEPENDENCIES =
epiphany_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/emdlparser.Po ./$(DEPDIR)/entity.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_boulder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_brick.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_door.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_emerald.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_exit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_explosion.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_falling.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_flintstone.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_gem.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_grass.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_key.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_monster.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_peperon.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_player.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_sapphire.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_steel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_tomato.Po \
@AMDEP_TRUE@	./$(DEPDIR)/entity_wood.Po ./$(DEPDIR)/epiconfig.Po \
@AMDEP_TRUE@	./$(DEPDIR)/epimap.Po ./$(DEPDIR)/game.Po \
@AMDEP_TRUE@	./$(DEPDIR)/game_timer.Po ./$(DEPDIR)/level.Po \
@AMDEP_TRUE@	./$(DEPDIR)/levelmap.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@	./$(DEPDIR)/menu.Po ./$(DEPDIR)/myparser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/pointer.Po ./$(DEPDIR)/sample.Po \
@AMDEP_TRUE@	./$(DEPDIR)/screen.Po ./$(DEPDIR)/sfx.Po \
@AMDEP_TRUE@	./$(DEPDIR)/sprite.Po ./$(DEPDIR)/spriteset.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(epiphany_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(epiphany_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
epiphany$(EXEEXT): $(epiphany_OBJECTS) $(epiphany_DEPENDENCIES) 
	@rm -f epiphany$(EXEEXT)
	$(CXXLINK) $(epiphany_LDFLAGS) $(epiphany_OBJECTS) $(epiphany_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/emdlparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_boulder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_brick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_door.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_emerald.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_exit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_explosion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_falling.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_flintstone.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_gem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_grass.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_key.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_monster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_peperon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_sapphire.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_steel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_tomato.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/entity_wood.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epiconfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epimap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game_timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/level.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/levelmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/myparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pointer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/screen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sfx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sprite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spriteset.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

entity_gem.o: entities/entity_gem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_gem.o -MD -MP -MF "$(DEPDIR)/entity_gem.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_gem.o `test -f 'entities/entity_gem.cpp' || echo '$(srcdir)/'`entities/entity_gem.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_gem.Tpo" "$(DEPDIR)/entity_gem.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_gem.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_gem.cpp' object='entity_gem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_gem.Po' tmpdepfile='$(DEPDIR)/entity_gem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_gem.o `test -f 'entities/entity_gem.cpp' || echo '$(srcdir)/'`entities/entity_gem.cpp

entity_gem.obj: entities/entity_gem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_gem.obj -MD -MP -MF "$(DEPDIR)/entity_gem.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_gem.obj `if test -f 'entities/entity_gem.cpp'; then $(CYGPATH_W) 'entities/entity_gem.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_gem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_gem.Tpo" "$(DEPDIR)/entity_gem.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_gem.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_gem.cpp' object='entity_gem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_gem.Po' tmpdepfile='$(DEPDIR)/entity_gem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_gem.obj `if test -f 'entities/entity_gem.cpp'; then $(CYGPATH_W) 'entities/entity_gem.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_gem.cpp'; fi`

entity_door.o: entities/entity_door.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_door.o -MD -MP -MF "$(DEPDIR)/entity_door.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_door.o `test -f 'entities/entity_door.cpp' || echo '$(srcdir)/'`entities/entity_door.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_door.Tpo" "$(DEPDIR)/entity_door.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_door.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_door.cpp' object='entity_door.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_door.Po' tmpdepfile='$(DEPDIR)/entity_door.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_door.o `test -f 'entities/entity_door.cpp' || echo '$(srcdir)/'`entities/entity_door.cpp

entity_door.obj: entities/entity_door.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_door.obj -MD -MP -MF "$(DEPDIR)/entity_door.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_door.obj `if test -f 'entities/entity_door.cpp'; then $(CYGPATH_W) 'entities/entity_door.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_door.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_door.Tpo" "$(DEPDIR)/entity_door.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_door.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_door.cpp' object='entity_door.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_door.Po' tmpdepfile='$(DEPDIR)/entity_door.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_door.obj `if test -f 'entities/entity_door.cpp'; then $(CYGPATH_W) 'entities/entity_door.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_door.cpp'; fi`

entity_wood.o: entities/entity_wood.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_wood.o -MD -MP -MF "$(DEPDIR)/entity_wood.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_wood.o `test -f 'entities/entity_wood.cpp' || echo '$(srcdir)/'`entities/entity_wood.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_wood.Tpo" "$(DEPDIR)/entity_wood.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_wood.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_wood.cpp' object='entity_wood.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_wood.Po' tmpdepfile='$(DEPDIR)/entity_wood.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_wood.o `test -f 'entities/entity_wood.cpp' || echo '$(srcdir)/'`entities/entity_wood.cpp

entity_wood.obj: entities/entity_wood.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_wood.obj -MD -MP -MF "$(DEPDIR)/entity_wood.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_wood.obj `if test -f 'entities/entity_wood.cpp'; then $(CYGPATH_W) 'entities/entity_wood.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_wood.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_wood.Tpo" "$(DEPDIR)/entity_wood.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_wood.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_wood.cpp' object='entity_wood.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_wood.Po' tmpdepfile='$(DEPDIR)/entity_wood.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_wood.obj `if test -f 'entities/entity_wood.cpp'; then $(CYGPATH_W) 'entities/entity_wood.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_wood.cpp'; fi`

entity_brick.o: entities/entity_brick.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_brick.o -MD -MP -MF "$(DEPDIR)/entity_brick.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_brick.o `test -f 'entities/entity_brick.cpp' || echo '$(srcdir)/'`entities/entity_brick.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_brick.Tpo" "$(DEPDIR)/entity_brick.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_brick.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_brick.cpp' object='entity_brick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_brick.Po' tmpdepfile='$(DEPDIR)/entity_brick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_brick.o `test -f 'entities/entity_brick.cpp' || echo '$(srcdir)/'`entities/entity_brick.cpp

entity_brick.obj: entities/entity_brick.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_brick.obj -MD -MP -MF "$(DEPDIR)/entity_brick.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_brick.obj `if test -f 'entities/entity_brick.cpp'; then $(CYGPATH_W) 'entities/entity_brick.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_brick.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_brick.Tpo" "$(DEPDIR)/entity_brick.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_brick.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_brick.cpp' object='entity_brick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_brick.Po' tmpdepfile='$(DEPDIR)/entity_brick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_brick.obj `if test -f 'entities/entity_brick.cpp'; then $(CYGPATH_W) 'entities/entity_brick.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_brick.cpp'; fi`

entity_player.o: entities/entity_player.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_player.o -MD -MP -MF "$(DEPDIR)/entity_player.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_player.o `test -f 'entities/entity_player.cpp' || echo '$(srcdir)/'`entities/entity_player.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_player.Tpo" "$(DEPDIR)/entity_player.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_player.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_player.cpp' object='entity_player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_player.Po' tmpdepfile='$(DEPDIR)/entity_player.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_player.o `test -f 'entities/entity_player.cpp' || echo '$(srcdir)/'`entities/entity_player.cpp

entity_player.obj: entities/entity_player.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_player.obj -MD -MP -MF "$(DEPDIR)/entity_player.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_player.obj `if test -f 'entities/entity_player.cpp'; then $(CYGPATH_W) 'entities/entity_player.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_player.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_player.Tpo" "$(DEPDIR)/entity_player.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_player.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_player.cpp' object='entity_player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_player.Po' tmpdepfile='$(DEPDIR)/entity_player.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_player.obj `if test -f 'entities/entity_player.cpp'; then $(CYGPATH_W) 'entities/entity_player.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_player.cpp'; fi`

entity_falling.o: entities/entity_falling.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_falling.o -MD -MP -MF "$(DEPDIR)/entity_falling.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_falling.o `test -f 'entities/entity_falling.cpp' || echo '$(srcdir)/'`entities/entity_falling.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_falling.Tpo" "$(DEPDIR)/entity_falling.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_falling.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_falling.cpp' object='entity_falling.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_falling.Po' tmpdepfile='$(DEPDIR)/entity_falling.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_falling.o `test -f 'entities/entity_falling.cpp' || echo '$(srcdir)/'`entities/entity_falling.cpp

entity_falling.obj: entities/entity_falling.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_falling.obj -MD -MP -MF "$(DEPDIR)/entity_falling.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_falling.obj `if test -f 'entities/entity_falling.cpp'; then $(CYGPATH_W) 'entities/entity_falling.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_falling.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_falling.Tpo" "$(DEPDIR)/entity_falling.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_falling.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_falling.cpp' object='entity_falling.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_falling.Po' tmpdepfile='$(DEPDIR)/entity_falling.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_falling.obj `if test -f 'entities/entity_falling.cpp'; then $(CYGPATH_W) 'entities/entity_falling.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_falling.cpp'; fi`

entity_emerald.o: entities/entity_emerald.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_emerald.o -MD -MP -MF "$(DEPDIR)/entity_emerald.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_emerald.o `test -f 'entities/entity_emerald.cpp' || echo '$(srcdir)/'`entities/entity_emerald.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_emerald.Tpo" "$(DEPDIR)/entity_emerald.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_emerald.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_emerald.cpp' object='entity_emerald.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_emerald.Po' tmpdepfile='$(DEPDIR)/entity_emerald.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_emerald.o `test -f 'entities/entity_emerald.cpp' || echo '$(srcdir)/'`entities/entity_emerald.cpp

entity_emerald.obj: entities/entity_emerald.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_emerald.obj -MD -MP -MF "$(DEPDIR)/entity_emerald.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_emerald.obj `if test -f 'entities/entity_emerald.cpp'; then $(CYGPATH_W) 'entities/entity_emerald.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_emerald.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_emerald.Tpo" "$(DEPDIR)/entity_emerald.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_emerald.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_emerald.cpp' object='entity_emerald.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_emerald.Po' tmpdepfile='$(DEPDIR)/entity_emerald.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_emerald.obj `if test -f 'entities/entity_emerald.cpp'; then $(CYGPATH_W) 'entities/entity_emerald.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_emerald.cpp'; fi`

entity_peperon.o: entities/entity_peperon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_peperon.o -MD -MP -MF "$(DEPDIR)/entity_peperon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_peperon.o `test -f 'entities/entity_peperon.cpp' || echo '$(srcdir)/'`entities/entity_peperon.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_peperon.Tpo" "$(DEPDIR)/entity_peperon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_peperon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_peperon.cpp' object='entity_peperon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_peperon.Po' tmpdepfile='$(DEPDIR)/entity_peperon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_peperon.o `test -f 'entities/entity_peperon.cpp' || echo '$(srcdir)/'`entities/entity_peperon.cpp

entity_peperon.obj: entities/entity_peperon.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_peperon.obj -MD -MP -MF "$(DEPDIR)/entity_peperon.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_peperon.obj `if test -f 'entities/entity_peperon.cpp'; then $(CYGPATH_W) 'entities/entity_peperon.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_peperon.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_peperon.Tpo" "$(DEPDIR)/entity_peperon.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_peperon.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_peperon.cpp' object='entity_peperon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_peperon.Po' tmpdepfile='$(DEPDIR)/entity_peperon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_peperon.obj `if test -f 'entities/entity_peperon.cpp'; then $(CYGPATH_W) 'entities/entity_peperon.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_peperon.cpp'; fi`

entity_sapphire.o: entities/entity_sapphire.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_sapphire.o -MD -MP -MF "$(DEPDIR)/entity_sapphire.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_sapphire.o `test -f 'entities/entity_sapphire.cpp' || echo '$(srcdir)/'`entities/entity_sapphire.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_sapphire.Tpo" "$(DEPDIR)/entity_sapphire.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_sapphire.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_sapphire.cpp' object='entity_sapphire.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_sapphire.Po' tmpdepfile='$(DEPDIR)/entity_sapphire.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_sapphire.o `test -f 'entities/entity_sapphire.cpp' || echo '$(srcdir)/'`entities/entity_sapphire.cpp

entity_sapphire.obj: entities/entity_sapphire.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_sapphire.obj -MD -MP -MF "$(DEPDIR)/entity_sapphire.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_sapphire.obj `if test -f 'entities/entity_sapphire.cpp'; then $(CYGPATH_W) 'entities/entity_sapphire.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_sapphire.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_sapphire.Tpo" "$(DEPDIR)/entity_sapphire.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_sapphire.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_sapphire.cpp' object='entity_sapphire.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_sapphire.Po' tmpdepfile='$(DEPDIR)/entity_sapphire.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_sapphire.obj `if test -f 'entities/entity_sapphire.cpp'; then $(CYGPATH_W) 'entities/entity_sapphire.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_sapphire.cpp'; fi`

entity_flintstone.o: entities/entity_flintstone.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_flintstone.o -MD -MP -MF "$(DEPDIR)/entity_flintstone.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_flintstone.o `test -f 'entities/entity_flintstone.cpp' || echo '$(srcdir)/'`entities/entity_flintstone.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_flintstone.Tpo" "$(DEPDIR)/entity_flintstone.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_flintstone.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_flintstone.cpp' object='entity_flintstone.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_flintstone.Po' tmpdepfile='$(DEPDIR)/entity_flintstone.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_flintstone.o `test -f 'entities/entity_flintstone.cpp' || echo '$(srcdir)/'`entities/entity_flintstone.cpp

entity_flintstone.obj: entities/entity_flintstone.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_flintstone.obj -MD -MP -MF "$(DEPDIR)/entity_flintstone.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_flintstone.obj `if test -f 'entities/entity_flintstone.cpp'; then $(CYGPATH_W) 'entities/entity_flintstone.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_flintstone.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_flintstone.Tpo" "$(DEPDIR)/entity_flintstone.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_flintstone.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_flintstone.cpp' object='entity_flintstone.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_flintstone.Po' tmpdepfile='$(DEPDIR)/entity_flintstone.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_flintstone.obj `if test -f 'entities/entity_flintstone.cpp'; then $(CYGPATH_W) 'entities/entity_flintstone.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_flintstone.cpp'; fi`

entity_explosion.o: entities/entity_explosion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_explosion.o -MD -MP -MF "$(DEPDIR)/entity_explosion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_explosion.o `test -f 'entities/entity_explosion.cpp' || echo '$(srcdir)/'`entities/entity_explosion.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_explosion.Tpo" "$(DEPDIR)/entity_explosion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_explosion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_explosion.cpp' object='entity_explosion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_explosion.Po' tmpdepfile='$(DEPDIR)/entity_explosion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_explosion.o `test -f 'entities/entity_explosion.cpp' || echo '$(srcdir)/'`entities/entity_explosion.cpp

entity_explosion.obj: entities/entity_explosion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_explosion.obj -MD -MP -MF "$(DEPDIR)/entity_explosion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_explosion.obj `if test -f 'entities/entity_explosion.cpp'; then $(CYGPATH_W) 'entities/entity_explosion.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_explosion.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_explosion.Tpo" "$(DEPDIR)/entity_explosion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_explosion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_explosion.cpp' object='entity_explosion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_explosion.Po' tmpdepfile='$(DEPDIR)/entity_explosion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_explosion.obj `if test -f 'entities/entity_explosion.cpp'; then $(CYGPATH_W) 'entities/entity_explosion.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_explosion.cpp'; fi`

entity_monster.o: entities/entity_monster.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_monster.o -MD -MP -MF "$(DEPDIR)/entity_monster.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_monster.o `test -f 'entities/entity_monster.cpp' || echo '$(srcdir)/'`entities/entity_monster.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_monster.Tpo" "$(DEPDIR)/entity_monster.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_monster.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_monster.cpp' object='entity_monster.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_monster.Po' tmpdepfile='$(DEPDIR)/entity_monster.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_monster.o `test -f 'entities/entity_monster.cpp' || echo '$(srcdir)/'`entities/entity_monster.cpp

entity_monster.obj: entities/entity_monster.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_monster.obj -MD -MP -MF "$(DEPDIR)/entity_monster.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_monster.obj `if test -f 'entities/entity_monster.cpp'; then $(CYGPATH_W) 'entities/entity_monster.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_monster.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_monster.Tpo" "$(DEPDIR)/entity_monster.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_monster.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_monster.cpp' object='entity_monster.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_monster.Po' tmpdepfile='$(DEPDIR)/entity_monster.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_monster.obj `if test -f 'entities/entity_monster.cpp'; then $(CYGPATH_W) 'entities/entity_monster.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_monster.cpp'; fi`

entity_boulder.o: entities/entity_boulder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_boulder.o -MD -MP -MF "$(DEPDIR)/entity_boulder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_boulder.o `test -f 'entities/entity_boulder.cpp' || echo '$(srcdir)/'`entities/entity_boulder.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_boulder.Tpo" "$(DEPDIR)/entity_boulder.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_boulder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_boulder.cpp' object='entity_boulder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_boulder.Po' tmpdepfile='$(DEPDIR)/entity_boulder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_boulder.o `test -f 'entities/entity_boulder.cpp' || echo '$(srcdir)/'`entities/entity_boulder.cpp

entity_boulder.obj: entities/entity_boulder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_boulder.obj -MD -MP -MF "$(DEPDIR)/entity_boulder.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_boulder.obj `if test -f 'entities/entity_boulder.cpp'; then $(CYGPATH_W) 'entities/entity_boulder.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_boulder.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_boulder.Tpo" "$(DEPDIR)/entity_boulder.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_boulder.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_boulder.cpp' object='entity_boulder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_boulder.Po' tmpdepfile='$(DEPDIR)/entity_boulder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_boulder.obj `if test -f 'entities/entity_boulder.cpp'; then $(CYGPATH_W) 'entities/entity_boulder.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_boulder.cpp'; fi`

entity_tomato.o: entities/entity_tomato.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_tomato.o -MD -MP -MF "$(DEPDIR)/entity_tomato.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_tomato.o `test -f 'entities/entity_tomato.cpp' || echo '$(srcdir)/'`entities/entity_tomato.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_tomato.Tpo" "$(DEPDIR)/entity_tomato.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_tomato.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_tomato.cpp' object='entity_tomato.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_tomato.Po' tmpdepfile='$(DEPDIR)/entity_tomato.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_tomato.o `test -f 'entities/entity_tomato.cpp' || echo '$(srcdir)/'`entities/entity_tomato.cpp

entity_tomato.obj: entities/entity_tomato.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_tomato.obj -MD -MP -MF "$(DEPDIR)/entity_tomato.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_tomato.obj `if test -f 'entities/entity_tomato.cpp'; then $(CYGPATH_W) 'entities/entity_tomato.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_tomato.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_tomato.Tpo" "$(DEPDIR)/entity_tomato.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_tomato.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_tomato.cpp' object='entity_tomato.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_tomato.Po' tmpdepfile='$(DEPDIR)/entity_tomato.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_tomato.obj `if test -f 'entities/entity_tomato.cpp'; then $(CYGPATH_W) 'entities/entity_tomato.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_tomato.cpp'; fi`

entity_steel.o: entities/entity_steel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_steel.o -MD -MP -MF "$(DEPDIR)/entity_steel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_steel.o `test -f 'entities/entity_steel.cpp' || echo '$(srcdir)/'`entities/entity_steel.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_steel.Tpo" "$(DEPDIR)/entity_steel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_steel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_steel.cpp' object='entity_steel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_steel.Po' tmpdepfile='$(DEPDIR)/entity_steel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_steel.o `test -f 'entities/entity_steel.cpp' || echo '$(srcdir)/'`entities/entity_steel.cpp

entity_steel.obj: entities/entity_steel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_steel.obj -MD -MP -MF "$(DEPDIR)/entity_steel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_steel.obj `if test -f 'entities/entity_steel.cpp'; then $(CYGPATH_W) 'entities/entity_steel.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_steel.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_steel.Tpo" "$(DEPDIR)/entity_steel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_steel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_steel.cpp' object='entity_steel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_steel.Po' tmpdepfile='$(DEPDIR)/entity_steel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_steel.obj `if test -f 'entities/entity_steel.cpp'; then $(CYGPATH_W) 'entities/entity_steel.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_steel.cpp'; fi`

entity_grass.o: entities/entity_grass.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_grass.o -MD -MP -MF "$(DEPDIR)/entity_grass.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_grass.o `test -f 'entities/entity_grass.cpp' || echo '$(srcdir)/'`entities/entity_grass.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_grass.Tpo" "$(DEPDIR)/entity_grass.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_grass.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_grass.cpp' object='entity_grass.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_grass.Po' tmpdepfile='$(DEPDIR)/entity_grass.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_grass.o `test -f 'entities/entity_grass.cpp' || echo '$(srcdir)/'`entities/entity_grass.cpp

entity_grass.obj: entities/entity_grass.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_grass.obj -MD -MP -MF "$(DEPDIR)/entity_grass.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_grass.obj `if test -f 'entities/entity_grass.cpp'; then $(CYGPATH_W) 'entities/entity_grass.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_grass.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_grass.Tpo" "$(DEPDIR)/entity_grass.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_grass.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_grass.cpp' object='entity_grass.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_grass.Po' tmpdepfile='$(DEPDIR)/entity_grass.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_grass.obj `if test -f 'entities/entity_grass.cpp'; then $(CYGPATH_W) 'entities/entity_grass.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_grass.cpp'; fi`

entity_exit.o: entities/entity_exit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_exit.o -MD -MP -MF "$(DEPDIR)/entity_exit.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_exit.o `test -f 'entities/entity_exit.cpp' || echo '$(srcdir)/'`entities/entity_exit.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_exit.Tpo" "$(DEPDIR)/entity_exit.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_exit.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_exit.cpp' object='entity_exit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_exit.Po' tmpdepfile='$(DEPDIR)/entity_exit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_exit.o `test -f 'entities/entity_exit.cpp' || echo '$(srcdir)/'`entities/entity_exit.cpp

entity_exit.obj: entities/entity_exit.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_exit.obj -MD -MP -MF "$(DEPDIR)/entity_exit.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_exit.obj `if test -f 'entities/entity_exit.cpp'; then $(CYGPATH_W) 'entities/entity_exit.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_exit.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_exit.Tpo" "$(DEPDIR)/entity_exit.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_exit.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_exit.cpp' object='entity_exit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_exit.Po' tmpdepfile='$(DEPDIR)/entity_exit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_exit.obj `if test -f 'entities/entity_exit.cpp'; then $(CYGPATH_W) 'entities/entity_exit.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_exit.cpp'; fi`

entity_key.o: entities/entity_key.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_key.o -MD -MP -MF "$(DEPDIR)/entity_key.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_key.o `test -f 'entities/entity_key.cpp' || echo '$(srcdir)/'`entities/entity_key.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_key.Tpo" "$(DEPDIR)/entity_key.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_key.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_key.cpp' object='entity_key.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_key.Po' tmpdepfile='$(DEPDIR)/entity_key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_key.o `test -f 'entities/entity_key.cpp' || echo '$(srcdir)/'`entities/entity_key.cpp

entity_key.obj: entities/entity_key.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT entity_key.obj -MD -MP -MF "$(DEPDIR)/entity_key.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o entity_key.obj `if test -f 'entities/entity_key.cpp'; then $(CYGPATH_W) 'entities/entity_key.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_key.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/entity_key.Tpo" "$(DEPDIR)/entity_key.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/entity_key.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='entities/entity_key.cpp' object='entity_key.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/entity_key.Po' tmpdepfile='$(DEPDIR)/entity_key.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o entity_key.obj `if test -f 'entities/entity_key.cpp'; then $(CYGPATH_W) 'entities/entity_key.cpp'; else $(CYGPATH_W) '$(srcdir)/entities/entity_key.cpp'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
